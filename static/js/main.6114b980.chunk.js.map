{"version":3,"sources":["images/energize-screenshot.png","images/flik-picture.jpg","images/bakugan-rerolled-logo.png","images/flappy-bird-pic.jpeg","images/anzen-login-screenshot.png","Album.js","TestPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Album","classes","keyIndex","Fragment","CssBaseline","className","Container","maxWidth","component","gutterBottom","paragraph","Grid","container","justify","item","Button","key","xs","sm","md","Card","CardMedia","image","EnergizeScreenshot","title","CardContent","CardActions","to","size","BakuganLogo","HeroOfKonoha","AnzenMain","FlikPic","target","rel","TestPage","OldLayout","Anzen","Energize","Bakugan","Flik","MFVAS","Outerstellar","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6114b980.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/energize-screenshot.76b82c2f.png\";","module.exports = __webpack_public_path__ + \"static/media/flik-picture.676f0fb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bakugan-rerolled-logo.dd60812a.png\";","module.exports = __webpack_public_path__ + \"static/media/flappy-bird-pic.619dbf30.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/anzen-login-screenshot.e3a488e6.png\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink as NavLink\n} from 'react-router-dom';\n\nimport EnergizeScreenshot from './images/energize-screenshot.png';\nimport FlikPic from './images/flik-picture.jpg';\nimport BakuganLogo from './images/bakugan-rerolled-logo.png';\nimport HeroOfKonoha from './images/flappy-bird-pic.jpeg';\nimport AnzenMain from './images/anzen-login-screenshot.png';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Matteas Eden\n      </Link>{' '}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Album() {\n  const classes = useStyles();\n  var keyIndex = 1;\n\n  /**\n   * <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Album layout\n          </Typography>\n        </Toolbar>\n      </AppBar>\n   */\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\t<Router>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              ããããï¼\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          This is my personal website I created using React to showcase the various projects I have worked\n\t  on over the past few years. It doesn't have much yet, but I'm hoping to change that as time goes on.\n\t  So, make sure to keep watching this space!\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" href=\"https://www.linkedin.com/in/matteaseden/\">\n                    LinkedIn\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" href=\"http://github.com/matteas-eden\">\n                    Github\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n\t  \n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n\n            {/* Energize */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={EnergizeScreenshot}\n                    title=\"Energize\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Energize\n                    </Typography>\n                    <Typography>\n                      A Zelda-clone made with JavaFX that supports LAN Multiplayer.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/energize\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n              </Grid>\n\n            {/* Outerstellar */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Outerstellar\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Outerstellar\n                    </Typography>\n                    <Typography>\n                      A top-down arcade shooter made in 5 days for an Arcade Games Hackathon.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/outerstellar\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n            </Grid>\n\n            {/* Bakugan Rerolled */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={BakuganLogo}\n                    title=\"Bakugan Rerolled\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Bakugan Rerolled\n                    </Typography>\n                    <Typography>\n                      A JavaFX game that simulates the battle system from <i>Bakugan Battle Brawlers</i>.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/bakugan-rerolled\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n            </Grid>\n\n            {/* Flappy Bird */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={HeroOfKonoha}\n                    title=\"Hero of Konoha\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Hero of Konoha\n                    </Typography>\n                    <Typography>\n                      A Flappy Bird clone made in VHDL, themed after the character <i>Naruto</i> from <i>Naruto</i>.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/hero-of-konoha\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n            </Grid>\n\n            {/* Anzen */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={AnzenMain}\n                    title=\"Anzen\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Anzen\n                    </Typography>\n                    <Typography>\n                      A webapp for messaging other users on a hybrid P2P network.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/anzen\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n            </Grid>\n\n            {/* Flik */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={FlikPic}\n                    title=\"Flik\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Flik\n                    </Typography>\n                    <Typography>\n                      A line-following robot designed to navigate a Pacman-like maze.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/flik\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n            </Grid>\n\n            {/* MFVAS */}\n            <Grid item key={keyIndex++} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Model Fusion Video Analytics System\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Model Fusion Video Analytics System \n                    </Typography>\n                    <Typography>\n                      An evaluation of a person-tracking system designed by <a \n                      className=\"App-link\"\n                      href=\"http://www.andrewchen.nz\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      >Dr Andrew Chen</a>.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n\t  \t   <NavLink to=\"/mfvas\">\n                    <Button size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n\t  \t   </NavLink>\n                  </CardActions>\n                </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n     </Router>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        {/* <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" gutterBottom>\n          Footer\n        </Typography> */}\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Source for this site taken from <a href=\"https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/album\">here. </a>\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nfunction TestPage() {\n\treturn (\n\t\t<div>\n\t\t<h1>This is a test page</h1>\n\t\t</div>\n\t);\n}\n\nexport default TestPage\n","import React from 'react';\nimport Album from './Album';\nimport TestPage from './TestPage';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch,\n\tLink as NavLink\n} from 'react-router-dom'\n\nfunction OldLayout() {\n\treturn (\n\t\t<header className=\"App-header\">\n\t\t<Album />\n\t\t</header>\n\t);\n}\n\nfunction App() {\n  return (\n   <Router>\n    <div className=\"App\">\n     <Switch>\n     <Route path=\"/\">\n\t  <OldLayout />\n     </Route>\n     <Route path=\"/anzen\">\n\t  <Anzen />\n     </Route>\n     <Route path=\"/bakugan-rerolled\">\n\t  <Bakugan />\n     </Route>\n     <Route path=\"/energize\">\n\t  <Energize />\n     </Route>\n     <Route path=\"/flik\">\n\t  <Flik />\n     </Route>\n     <Route path=\"/mfvas\">\n\t  <MFVAS />\n     </Route>\n     <Route path=\"/outerstellar\">\n\t  <Outerstellar />\n     </Route>\n     </Switch>\n    </div>\n   </Router>\n  );\n}\n\nfunction Home() {\n\treturn (\n\t\t<header className=\"Home\">\n\t\t<NavLink to=\"/anzen\">Anzen</NavLink><br />\n\t\t<NavLink to=\"/bakugan-rerolled\">Bakugan</NavLink><br />\n\t\t<NavLink to=\"/energize\">Energize</NavLink><br />\n\t\t<NavLink to=\"/flik\">Flik</NavLink><br />\n\t\t<NavLink to=\"/mfvas\">MFVAS</NavLink><br />\n\t\t<NavLink to=\"/outerstellar\">Outerstellar</NavLink>\n\t\t</header>\n\t);\n}\n\nfunction Anzen() {\n\treturn (\n\t\t<header className=\"Anzen\">\n\t\t<NavLink to=\"/\">Home</NavLink><br/>\n\t\t<NavLink to=\"/energize\">Energize</NavLink>\n\t\t</header>\n\t);\n}\n\nfunction Energize() {\n\treturn (\n\t\t<header className=\"Energize\">\n\t\t<NavLink to=\"/\">Home</NavLink><br/>\n\t\t<NavLink to=\"/bakugan-rerolled\">Bakugan</NavLink>\n\t\t</header>\n\t);\n}\n\nfunction Bakugan() {\n\treturn (\n\t\t<header className=\"Bakugan\">\n\t\t<NavLink to=\"/\">Home</NavLink><br/>\n\t\t<NavLink to=\"/flik\">Flik</NavLink><br/>\n\t\t<h1>Bakugan</h1>\n\t\t</header>\n\t);\n}\n\nfunction Flik() {\n\treturn (\n\t\t<header className=\"Flik\">\n\t\t<NavLink to=\"/\">Home</NavLink><br/>\n\t\t<NavLink to=\"/mfvas\">Model Fusion Video Analytics System</NavLink>\n\t\t<h1>MFVAS</h1>\n\t\t</header>\n\t);\n}\n\nfunction MFVAS() {\n\treturn (\n\t\t<header className=\"MFVAS\">\n\t\t<NavLink to=\"/\">Home</NavLink><br/>\n\t\t<NavLink to=\"/outerstellar\">Outerstellar</NavLink>\n\t\t<h1>Model Fusion Video Analytics System</h1>\n\t\t</header>\n\t);\n}\n\nfunction Outerstellar() {\n\treturn (\n\t\t<header className=\"Outerstellar\">\n\t\t<NavLink to=\"/\">Home</NavLink><br/>\n\t\t<NavLink to=\"/anzen\">Anzen</NavLink>\n\t\t<h1>Outerstellar</h1>\n\t\t</header>\n\t);\n}\n/**\n * <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <pre>\n          <code>\n\t  \tputs(\"Hello World!\");\n\t  </code>\n        </pre>\n        <a\n          className=\"App-link\"\n          href=\"http://matteas-eden.github.io/jekyll-site\"\n          target=\"_self\"\n          rel=\"noopener noreferrer\"\n        >\n          The actual site can be found here\n        </a> */ \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}