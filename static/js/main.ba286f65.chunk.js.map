{"version":3,"sources":["images/flappy-bird-pic.jpeg","images/energize-screenshot.png","images/flik-picture.jpg","images/bakugan-rerolled-logo.png","images/anzen-login-screenshot.png","pages/Home.js","pages/Anzen.js","pages/BakuganRerolled.js","pages/Energize.js","pages/Flik.js","pages/MFVAS.js","pages/HeroOfKonoha.js","pages/Outerstellar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Anzen","React","Component","BakuganRerolled","className","ReactComponent","Energize","Flik","MFVAS","Outerstellar","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,mD,mBCA3CD,EAAOC,QAAU,IAA0B,oD,8QCyCzBC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BC,YAAa,CACXC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,QAAST,EAAMG,QAAQ,EAAG,EAAG,IAE/BO,YAAa,CACXC,UAAWX,EAAMG,QAAQ,IAE3BS,SAAU,CACRC,WAAYb,EAAMG,QAAQ,GAC1BW,cAAed,EAAMG,QAAQ,IAE/BY,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTN,WAAY,UAEdO,YAAa,CACXC,SAAU,GAEZC,OAAQ,CACNjB,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,QAAST,EAAMG,QAAQ,Q,yCCxDZoB,E,iLARb,OACA,0D,GAHkBC,IAAMC,aCUXC,E,iLARb,OACA,6BAAKC,UAAU,mBAAf,yC,GAH4BC,4BCUfC,E,iLARb,OACA,6BAAKF,UAAU,YAAf,iC,GAHqBC,4BCURE,E,iLARb,OACA,6BAAKH,UAAU,QAAf,6B,GAHiBC,4BCUJG,GCVYH,2B,iLDEzB,OACA,6BAAKD,UAAU,SAAf,8B,GAHkBC,6BEULI,E,iLARb,OACA,6BAAKL,UAAU,gBAAf,qC,GAHyBC,4B,gBCmEZK,MAlDf,WACE,OACC,kBAAC,IAAD,KACC,yBAAKN,UAAU,OACd,4BAAQA,UAAU,cAClB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,KACpB,kBAAC,EAAD,OAEE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UACpB,kBAAC,EAAD,OAEE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBACpB,kBAAC,EAAD,OAEE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aACpB,kBAAC,EAAD,OAEE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SACpB,kBAAC,EAAD,OAEE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UACpB,kBAAC,EAAD,OAEE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBACpB,kBAAC,EAAD,YCjCiBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ba286f65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flappy-bird-pic.619dbf30.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/energize-screenshot.76b82c2f.png\";","module.exports = __webpack_public_path__ + \"static/media/flik-picture.676f0fb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bakugan-rerolled-logo.dd60812a.png\";","module.exports = __webpack_public_path__ + \"static/media/anzen-login-screenshot.e3a488e6.png\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink as NavLink\n} from 'react-router-dom';\n\nimport EnergizeScreenshot from '../images/energize-screenshot.png';\nimport FlikPic from '../images/flik-picture.jpg';\nimport BakuganLogo from '../images/bakugan-rerolled-logo.png';\nimport HeroOfKonohaPic from '../images/flappy-bird-pic.jpeg';\nimport AnzenMain from '../images/anzen-login-screenshot.png';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Matteas Eden\n      </Link>{' '}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction ProjectCard(props) {\n\n\tconst classes = useStyles();\n\n\treturn (\n\t      <Grid item key={props.key} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={props.image}\n                    title={props.title}\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t{props.title}\n                    </Typography>\n                    <Typography>\n\t\t\t{props.description}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button component={NavLink} to={props.link} size=\"small\" color=\"primary\">\n                      Read More\n                    </Button>\n                  </CardActions>\n                </Card>\n            </Grid>\n\t);\n}\n\nexport default function Album() {\n\n  const classes = useStyles();\n  var keyIndex = 1;\n\n  /**\n   * <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Album layout\n          </Typography>\n        </Toolbar>\n      </AppBar>\n   */\n\n  return (\n\t<React.Fragment>\n\t\n\t<CssBaseline />\n        {/* Hero unit */}\n\t<div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              ようこそ！\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          This is my personal website I created using React to showcase the various projects I have worked\n\t  on over the past few years. It doesn't have much yet, but I'm hoping to change that as time goes on.\n\t  So, make sure to keep watching this space!\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" href=\"https://www.linkedin.com/in/matteaseden/\">\n                    LinkedIn\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button component={NavLink} to=\"/anzen\" variant=\"outlined\" color=\"primary\">\n                    Github\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n\n\t<Container className={classes.cardGrid} maxWidth=\"md\">\n\t  <Grid container spacing={4}>\n\t  <ProjectCard key={keyIndex++} image={AnzenMain} title=\"Anzen\" description=\"Weeb + security = this site\" link=\"/anzen\" />\n\t  <ProjectCard key={keyIndex++} image={BakuganLogo} title=\"Bakugan Rerolled\" \n\t  \tdescription=\"A JavaFX game that is currently in development hell.\"\n\t  \tlink=\"/bakugan-rerolled\" \n\t  />\n\t  <ProjectCard key={keyIndex++} image={EnergizeScreenshot} title=\"Energize\" \n\t  \tdescription=\"A JavaFX game that is currently in development hell.\"\n\t  \tlink=\"/energize\" \n\t  />\n\t  <ProjectCard key={keyIndex++} image={FlikPic} title=\"Flik\" \n\t  \tdescription=\"16 hour days at University.\"\n\t  \tlink=\"/flik\" \n\t  />\n\t  <ProjectCard key={keyIndex++} image={HeroOfKonohaPic} title=\"Hero of Konoha\" \n\t  \tdescription=\"Naruto-themed flappy bird clone, believe it!\"\n\t  \tlink=\"/hero-of-konoha\" \n\t  />\n\t  <ProjectCard key={keyIndex++} image={HeroOfKonohaPic} title=\"Model Fusion Video Analytics System\" \n\t  \tdescription=\"A summer research project investigating the menu at Ichiban\"\n\t  \tlink=\"/mfvas\" \n\t  />\n\t  <ProjectCard key={keyIndex++} image={HeroOfKonohaPic} title=\"Outerstellar\" \n\t  \tdescription=\"One of my proudest accomplishments\"\n\t  \tlink=\"/outerstellar\" \n\t  />\n\t  </Grid>\n        </Container>\n\t\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Source for this site taken from <a href=\"https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/album\">here. </a>\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n     </React.Fragment>\n  );\n}\n","import React from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass Anzen extends React.Component () {\n\trender() {\n\t\treturn(\n\t\t<h1>\n\t\t\tThis is the Anzen page\n\t\t</h1>\n\t\t)\n\t}\n}\n\nexport default Anzen\n","import {React, ReactComponent} from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass BakuganRerolled extends ReactComponent () {\n\trender() {\n\t\treturn(\n\t\t<div className=\"BakuganRerolled\">\n\t\t\tThis is the Bakugan Rerolled page\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default BakuganRerolled\n","import {React, ReactComponent} from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass Energize extends ReactComponent () {\n\trender() {\n\t\treturn(\n\t\t<div className=\"Energize\">\n\t\t\tThis is the Energize page\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Energize\n","import {React, ReactComponent} from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass Flik extends ReactComponent () {\n\trender() {\n\t\treturn(\n\t\t<div className=\"Flik\">\n\t\t\tThis is the Flik page\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Flik\n","import {React, ReactComponent} from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass MFVAS extends ReactComponent () {\n\trender() {\n\t\treturn(\n\t\t<div className=\"MFVAS\">\n\t\t\tThis is the MFVAS page\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MFVAS\n","import {React, ReactComponent} from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass HeroOfKonoha extends ReactComponent () {\n\trender() {\n\t\treturn(\n\t\t<div className=\"HeroOfKonoha\">\n\t\t\tThis is the Hero of Konoha page\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HeroOfKonoha\n","import {React, ReactComponent} from 'react';\nimport {Link as NavLink} from 'react-router-dom';\n\nclass Outerstellar extends ReactComponent () {\n\trender() {\n\t\treturn(\n\t\t<div className=\"Outerstellar\">\n\t\t\tThis is the Outerstellar page\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Outerstellar\n","import React from 'react';\n\nimport Home from './pages/Home';\nimport Anzen from './pages/Anzen';\nimport BakuganRerolled from './pages/BakuganRerolled';\nimport Energize from './pages/Energize';\nimport Flik from './pages/Flik';\nimport HeroOfKonoha from './pages/HeroOfKonoha';\nimport MFVAS from './pages/MFVAS';\nimport Outerstellar from './pages/Outerstellar';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch,\n\tLink as NavLink\n} from 'react-router-dom'\n\nfunction App() {\n  return (\n   <Router>\n    <div className=\"App\">\n     <header className=\"App-header\">\n     <Switch>\n     <Route exact path=\"/\">\n\t  <Anzen />\n     </Route>\n     <Route exact path=\"/anzen\">\n\t  <Anzen />\n     </Route>\n     <Route exact path=\"/bakugan-rerolled\">\n\t  <BakuganRerolled />\n     </Route>\n     <Route exact path=\"/energize\">\n\t  <Energize />\n     </Route>\n     <Route exact path=\"/flik\">\n\t  <Flik />\n     </Route>\n     <Route exact path=\"/mfvas\">\n\t  <MFVAS />\n     </Route>\n     <Route exact path=\"/outerstellar\">\n\t  <Outerstellar />\n     </Route>\n     </Switch>\n     </header>\n    </div>\n   </Router>\n  );\n}\n\n/**\n * <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <pre>\n          <code>\n\t  \tputs(\"Hello World!\");\n\t  </code>\n        </pre>\n        <a\n          className=\"App-link\"\n          href=\"http://matteas-eden.github.io/jekyll-site\"\n          target=\"_self\"\n          rel=\"noopener noreferrer\"\n        >\n          The actual site can be found here\n        </a> */ \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}